/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChatResponse model module.
 * @module model/ChatResponse
 * @version v0
 */
class ChatResponse {
    /**
     * Constructs a new <code>ChatResponse</code>.
     * @alias module:model/ChatResponse
     */
    constructor() { 
        
        ChatResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChatResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatResponse} obj Optional instance to populate.
     * @return {module:model/ChatResponse} The populated <code>ChatResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('unreadCount')) {
                obj['unreadCount'] = ApiClient.convertToType(data['unreadCount'], 'Number');
            }
            if (data.hasOwnProperty('lastMessage')) {
                obj['lastMessage'] = ApiClient.convertToType(data['lastMessage'], 'String');
            }
            if (data.hasOwnProperty('lastMessageTime')) {
                obj['lastMessageTime'] = ApiClient.convertToType(data['lastMessageTime'], 'Date');
            }
            if (data.hasOwnProperty('senderId')) {
                obj['senderId'] = ApiClient.convertToType(data['senderId'], 'String');
            }
            if (data.hasOwnProperty('receiverId')) {
                obj['receiverId'] = ApiClient.convertToType(data['receiverId'], 'String');
            }
            if (data.hasOwnProperty('recipientOnline')) {
                obj['recipientOnline'] = ApiClient.convertToType(data['recipientOnline'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['lastMessage'] && !(typeof data['lastMessage'] === 'string' || data['lastMessage'] instanceof String)) {
            throw new Error("Expected the field `lastMessage` to be a primitive type in the JSON string but got " + data['lastMessage']);
        }
        // ensure the json data is a string
        if (data['senderId'] && !(typeof data['senderId'] === 'string' || data['senderId'] instanceof String)) {
            throw new Error("Expected the field `senderId` to be a primitive type in the JSON string but got " + data['senderId']);
        }
        // ensure the json data is a string
        if (data['receiverId'] && !(typeof data['receiverId'] === 'string' || data['receiverId'] instanceof String)) {
            throw new Error("Expected the field `receiverId` to be a primitive type in the JSON string but got " + data['receiverId']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
ChatResponse.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ChatResponse.prototype['name'] = undefined;

/**
 * @member {Number} unreadCount
 */
ChatResponse.prototype['unreadCount'] = undefined;

/**
 * @member {String} lastMessage
 */
ChatResponse.prototype['lastMessage'] = undefined;

/**
 * @member {Date} lastMessageTime
 */
ChatResponse.prototype['lastMessageTime'] = undefined;

/**
 * @member {String} senderId
 */
ChatResponse.prototype['senderId'] = undefined;

/**
 * @member {String} receiverId
 */
ChatResponse.prototype['receiverId'] = undefined;

/**
 * @member {Boolean} recipientOnline
 */
ChatResponse.prototype['recipientOnline'] = undefined;






export default ChatResponse;

